{"version":3,"sources":["components/others/Button.module.scss","components/ToDoList/Note.module.scss","components/ToDoList/ToDoList.module.scss","components/others/TextInput.module.scss","components/ToDoList/CreateLotOfNotes.module.scss","components/ToDoList/Menu.module.scss","context/CardContext.jsx","components/others/Button.jsx","components/others/Checkmark.jsx","components/others/TextInput.jsx","components/ToDoList/Note.jsx","components/ToDoList/CreateLotOfNotes.jsx","components/ToDoList/ToDoList.jsx","components/ToDoList/Menu.jsx","App.js","index.js"],"names":["module","exports","ACTION_ADD_NOTE","ACTION_REMOVE_NOTE","ACTION_REMOVE_ALL_NOTES","ACTION_MARK_CHECKED","ACTION_SORT_NOTES","ACTION_CHANGE_DESCRIPTION","ACTION_CREATE_3K_ELEMENTS","cardReducer","state","action","type","notes","payload","filter","note","id","map","check","checked","description","sort","CardContext","createContext","useCardContext","context","useContext","undefined","Error","CardContextProvider","children","initialState","useReducer","dispatch","addNote","useCallback","newNote","removeNote","noteId","removeAllNotes","changeNoteCheck","sortNotes","changeDescription","create3kElementes","value","useMemo","Provider","Button","props","className","buttonClass","onClick","href","Checkmark","stemClass","kickClass","TextInput","classes","onChange","e","onTextChange","placeholder","Note","useState","setChecked","noteClass","handleOnTextChange","buttonClasses","handleRemoveNote","handleChangeNoteCheck","CreateLotOfNotes","prev","next","count","setCount","hasMore","setHasMore","slice","current","setCurrent","dataLength","length","timer","setTimeout","concat","enabled","clearTimeout","prevState","loader","height","endMessage","style","textAlign","el","currentTarget","ToDoList","doneNotes","console","log","container","create3kElements","Menu","menuButtonsClass","uuid","menu","preventDefault","i","App","setCreate3kElements","handleOnCreate3kElements","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7094fb71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-normal\":\"Button_button-normal__2Tu9G\",\"button-delete\":\"Button_button-delete__2kAG0\",\"button-delete-unchecked\":\"Button_button-delete-unchecked__3vDty\",\"button-delete-checked\":\"Button_button-delete-checked__39uAu\",\"button-checkmark\":\"Button_button-checkmark__2h0SZ\",\"button-checkmark-unchecked\":\"Button_button-checkmark-unchecked__1gAeu\",\"button-checkmark-checked\":\"Button_button-checkmark-checked__12eg6\",\"button-checkmark-stem\":\"Button_button-checkmark-stem__jiC4t\",\"button-checkmark-kick\":\"Button_button-checkmark-kick__2pj2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__2IyqL\",\"note-unchecked\":\"Note_note-unchecked__1rozC\",\"note-checked\":\"Note_note-checked__1vpuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ToDoList_container__2e03i\",\"container-list\":\"ToDoList_container-list__2mCBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-input\":\"TextInput_note-input__FsYJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infinite-scroll\":\"CreateLotOfNotes_infinite-scroll__1J0kR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__3nV7N\"};","import React, {\n  useReducer,\n  createContext,\n  useContext,\n  useCallback,\n  useMemo\n} from 'react'\n\nexport const ACTION_ADD_NOTE = 'ACTION_ADD_NOTE'\nexport const ACTION_REMOVE_NOTE = 'ACTION_REMOVE_NOTE'\nexport const ACTION_REMOVE_ALL_NOTES = 'ACTION_REMOVE_ALL_NOTES'\nexport const ACTION_MARK_CHECKED = 'ACTION_MARK_CHECKED'\nexport const ACTION_SORT_NOTES = 'ACTION_SORT_NOTES'\nexport const ACTION_CHANGE_DESCRIPTION = 'ACTION_CHANGE_DESCRIPTION'\nexport const ACTION_CREATE_3K_ELEMENTS = 'ACTION_CREATE_3K_ELEMENTS'\n\nfunction cardReducer (state, action) {\n  switch (action.type) {\n    case ACTION_ADD_NOTE: {\n      return {\n        ...state,\n        notes: [...state.notes, action.payload]\n      }\n    }\n    case ACTION_REMOVE_NOTE: {\n      return {\n        ...state,\n        notes: state.notes.filter((note) => note.id !== action.payload.id)\n      }\n    }\n    case ACTION_REMOVE_ALL_NOTES: {\n      return {\n        ...state,\n        notes: []\n      }\n    }\n    case ACTION_MARK_CHECKED: {\n      return {\n        ...state,\n        notes: state.notes.map((note) => {\n          if (action.payload.id === note.id) {\n            note.check = !action.payload.checked\n          }\n          return note\n        })\n      }\n    }\n    case ACTION_CHANGE_DESCRIPTION: {\n      return {\n        ...state,\n        notes: state.notes.map((note) => {\n          if (action.payload.id === note.id) {\n            note.description = action.payload.description\n          }\n          return note\n        })\n      }\n    }\n    case ACTION_SORT_NOTES: {\n      return {\n        ...state,\n        notes: state.notes?.sort((note) => (note.check ? 1 : -1))\n      }\n    } case ACTION_CREATE_3K_ELEMENTS: {\n      return {\n        ...state,\n        notes: [...state.notes, action.payload]\n\n      }\n    }\n\n    default:\n      return state\n  }\n}\nconst CardContext = createContext()\nfunction useCardContext () {\n  const context = useContext(CardContext)\n  if (context === undefined) {\n    throw new Error('useCardContext must be used within a CardContextProvider')\n  }\n  return context\n}\n\nfunction CardContextProvider ({ children, initialState }) {\n  const [state, dispatch] = useReducer(cardReducer, {\n    notes: [],\n    ...initialState\n  })\n\n  const addNote = useCallback((newNote) => {\n    dispatch({\n      type: ACTION_ADD_NOTE,\n      payload: newNote\n    })\n  }, [])\n\n  const removeNote = useCallback((noteId) => {\n    dispatch({\n      type: ACTION_REMOVE_NOTE,\n      payload: noteId\n    })\n  }, [])\n  const removeAllNotes = useCallback(() => {\n    dispatch({\n      type: ACTION_REMOVE_ALL_NOTES\n    })\n  }, [])\n  const changeNoteCheck = useCallback((noteId, checked) => {\n    dispatch({\n      type: ACTION_MARK_CHECKED,\n      payload: noteId,\n      checked\n    })\n  }, [])\n  const sortNotes = useCallback(() => {\n    dispatch({\n      type: ACTION_SORT_NOTES\n    })\n  }, [])\n  const changeDescription = useCallback((noteId, description) => {\n    dispatch({\n      type: ACTION_CHANGE_DESCRIPTION,\n      payload: noteId,\n      description\n    })\n  }, [])\n  const create3kElementes = useCallback(() => {\n    dispatch({\n      type: ACTION_CREATE_3K_ELEMENTS\n    })\n  }, [])\n  const value = useMemo(\n    () => ({\n      ...state,\n      addNote,\n      removeNote,\n      removeAllNotes,\n      changeNoteCheck,\n      sortNotes,\n      changeDescription,\n      create3kElementes\n    }),\n    [\n      state,\n      addNote,\n      removeNote,\n      removeAllNotes,\n      changeNoteCheck,\n      sortNotes,\n      changeDescription,\n      create3kElementes\n    ]\n  )\n\n  return <CardContext.Provider value={value}>{children}</CardContext.Provider>\n}\nexport { CardContextProvider, useCardContext }\n","import React from 'react'\n\nconst Button = (props) => {\n  return (\n    <button className={props.buttonClass} onClick={props.onClick} id={props.id} href='#'>\n      {props.children}\n    </button>\n  )\n}\nexport default Button\n","import React from 'react'\nconst Checkmark = (props) => {\n  return (\n    <button className={props.buttonClass} onClick={props.onClick} id={props.id}>\n      <span>\n        <div className={props.stemClass} />\n        <div className={props.kickClass} />\n      </span>\n    </button>\n  )\n}\nexport default Checkmark\n","import React from 'react'\nimport classes from './TextInput.module.scss'\nimport TextareaAutosize from 'react-textarea-autosize'\n\nconst TextInput = (props) => {\n  return (\n    <TextareaAutosize\n      className={classes['note-input']}\n      onChange={(e) => props.onTextChange(e, props.id)}\n      placeholder='Write your thoughts'\n      value={props.description ? props.description : ''}\n    />\n  )\n}\nexport default TextInput\n","import React, { useState } from 'react'\nimport classes from './Note.module.scss'\nimport buttonClasses from '../others/Button.module.scss'\nimport { useCardContext } from '../../context/CardContext'\n\nimport Button from '../others/Button'\nimport Checkmark from '../others/Checkmark'\nimport TextInput from '../others/TextInput'\nconst Note = (props) => {\n  const [checked, setChecked] = useState(false)\n\n  const { removeNote, changeNoteCheck } = useCardContext()\n\n  const handleRemoveNote = (id = props.id) => {\n    removeNote({\n      id\n    })\n  }\n  const handleChangeNoteCheck = (id = props.id) => {\n    changeNoteCheck({\n      id,\n      checked\n    })\n  }\n\n  const noteClass = props.checked\n    ? `${classes.note} + ${classes['note-checked']}`\n    : `${classes.note} + ${classes['note-unchecked']}`\n\n  return (\n    <li className={noteClass} id={props.id}>\n      <TextInput\n        description={props.description}\n        onTextChange={props.handleOnTextChange}\n        id={props.id}\n      >\n        {props.children}\n      </TextInput>\n\n      <Button\n        buttonClass={\n          props.checked\n            ? `${buttonClasses['button-delete']} ${buttonClasses['button-delete-checked']}`\n            : `${buttonClasses['button-delete']} ${buttonClasses['button-delete-unchecked']}`\n        }\n        onClick={() => handleRemoveNote()}\n      >\n        <p>X</p>\n      </Button>\n      <Checkmark\n        stemClass={buttonClasses['button-checkmark-stem']}\n        kickClass={buttonClasses['button-checkmark-kick']}\n        buttonClass={\n          props.checked\n            ? `${buttonClasses['button-checkmark']} ${buttonClasses['button-checkmark-checked']}`\n            : `${buttonClasses['button-checkmark']} ${buttonClasses['button-checkmark-unchecked']}`\n        }\n        onClick={() => {\n          handleChangeNoteCheck()\n          setChecked(!checked)\n        }}\n      />\n    </li>\n  )\n}\nexport default Note\n","import React, { useState } from 'react'\n// import classes from \"./ToDoList.module.scss\";\nimport classes from './CreateLotOfNotes.module.scss'\nimport Note from './Note'\nimport { useCardContext } from '../../context/CardContext'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nconst CreateLotOfNotes = (props) => {\n  const loadElements = 75\n  const { notes, changeDescription } = useCardContext()\n\n  const [count, setCount] = useState({\n    prev: 0,\n    next: loadElements\n  })\n  const [hasMore, setHasMore] = useState(true)\n  const [current, setCurrent] = useState(notes.slice(count.prev, count.next))\n  const getMoreData = () => {\n    if (current.length === notes.length) {\n      setHasMore(false)\n      return\n    }\n    const timer = setTimeout(() => {\n      setCurrent(current.concat(notes.slice(count.prev + loadElements, count.next + loadElements)))\n    }, 5000)\n    if (!props.enabled) {\n      clearTimeout(timer)\n    }\n    setCount((prevState) => ({\n      prev: prevState.prev + loadElements,\n      next: prevState.next + loadElements\n    }))\n  }\n\n  return (\n\n    <InfiniteScroll\n      dataLength={current.length}\n      next={getMoreData}\n      hasMore={hasMore}\n        // loader={<h4 style={{display:\"block\"}}>Loading...</h4>}\n      loader={<h4>Loading...</h4>}\n      height={750}\n      endMessage={\n        <p style={{ textAlign: 'center' }}>\n          <b>Yay! You have seen it all</b>\n        </p>\n          }\n      className={classes['infinite-scroll']}\n    >\n      {/* <ul className={props.style}> */}\n      {current &&\n          current.map((el) => (\n            <Note\n              id={el.id}\n              key={el.id}\n              checked={el.check}\n              description={el.description}\n              handleOnTextChange={(e, id) => {\n                const description = e.currentTarget.value\n                changeDescription({\n                  id,\n                  description\n                })\n              }}\n            />\n\n          ))}\n\n      {/* </ul> */}\n\n    </InfiniteScroll>\n\n  )\n}\nexport default CreateLotOfNotes\n","import React from 'react'\nimport classes from './ToDoList.module.scss'\nimport Note from './Note'\nimport { useCardContext } from '../../context/CardContext'\nimport CreateLotOfNotes from './CreateLotOfNotes'\n\nconst ToDoList = (props) => {\n  const { notes, changeDescription } = useCardContext()\n\n  const doneNotes = notes.filter((el) => el.check === true)\n  if (doneNotes.length > 0) {\n    console.log('This notes were \"checked\":')\n    console.log(doneNotes)\n  } else {\n    console.log('\"Checked\" notes list is empty.')\n  }\n  return (\n    <section className={classes.container}>\n      <ul className={classes['container-list']}>\n        {!props.create3kElements\n          ? (\n              notes.map((el) => {\n                return (\n                  <Note\n                    id={el.id}\n                    key={el.id}\n                    checked={el.check}\n                    description={el.description}\n                    handleOnTextChange={(e, id) => {\n                      const description = e.currentTarget.value\n                      changeDescription({\n                        id,\n                        description\n                      })\n                    }}\n                  />\n                )\n              })\n            )\n          : (\n            <CreateLotOfNotes\n              style={classes['container-list']}\n              enabled={props.create3kElements}\n            />\n            )}\n      </ul>\n    </section>\n  )\n}\nexport default ToDoList\n","import React from 'react'\nimport classes from './Menu.module.scss'\nimport buttonClasses from '../others/Button.module.scss'\nimport Button from '../others/Button'\nimport { useCardContext } from '../../context/CardContext'\n\nimport { uuid } from 'uuidv4'\n\nconst Menu = (props) => {\n  const menuButtonsClass = buttonClasses['button-normal']\n\n  const { addNote, removeAllNotes, sortNotes } = useCardContext()\n\n  const id = uuid()\n\n  const handleOnRemoveAllNotes = () => {\n    props.create3kElements('del')\n    removeAllNotes()\n  }\n  const handleAddNote = (e) => {\n    addNote({\n      id,\n      check: false\n    })\n    e.preventDefault()\n  }\n  const handleSortNotes = () => {\n    sortNotes()\n  }\n  const handleCreate3knotes = () => {\n    props.create3kElements()\n    for (let i = 0; i < 3000; i++) {\n      const id = uuid()\n      addNote({\n        id,\n        check: false,\n        description: 'Creating 3k notes.'\n      })\n    }\n  }\n\n  return (\n    <div className={classes.menu}>\n      {/* <Button buttonClass={menuButtonsClass} onClick={e => handleAddNote(e)}> */}\n      <Button buttonClass={menuButtonsClass} onClick={handleAddNote}>\n        ADD NOTE\n      </Button>\n      <Button buttonClass={menuButtonsClass} onClick={handleOnRemoveAllNotes}>\n        DELETE ALL NOTES\n      </Button>\n      <Button buttonClass={menuButtonsClass} onClick={handleCreate3knotes}>\n        CREATE 3K NOTES\n      </Button>\n      <Button buttonClass={menuButtonsClass} onClick={handleSortNotes}>\n        SORT NOTES\n      </Button>\n    </div>\n  )\n}\nexport default Menu\n","import React, { useState } from 'react'\nimport './App.scss'\nimport ToDoList from './components/ToDoList/ToDoList'\nimport Menu from './components/ToDoList/Menu'\n\nfunction App () {\n  const [create3kElements, setCreate3kElements] = useState(false)\n  const handleOnCreate3kElements = (src) => {\n    if (src === 'del') {\n      setCreate3kElements(false)\n    } else {\n      setCreate3kElements(!create3kElements)\n    }\n  }\n\n  return (\n    <div className='app'>\n      <header className='app-header'>\n        This is recruitment task for Warsaw-Expo company.\n      </header>\n      <Menu create3kElements={src => handleOnCreate3kElements(src)} />\n\n      <ToDoList create3kElements={create3kElements} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport { CardContextProvider } from './context/CardContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CardContextProvider>\n      <App />\n    </CardContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}